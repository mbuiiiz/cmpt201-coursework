#define _POSIX_C_SOURCE 200112L
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#define BUF_SIZE 60

// 16 bytes
struct header {
  uint64_t size;       // 8 bytes
  struct header *next; // 8 bytes
};

void handle_error(const char *error) {
  perror(error);
  exit(EXIT_FAILURE);
}

void print_out(char *format, void *data, size_t data_size) {
  char buf[BUF_SIZE];
  ssize_t len =
      snprintf(buf, BUF_SIZE, format,
               data_size == sizeof(uint64_t) ? *(uint64_t *)data
                                             : (uint64_t) * (void **)data);

  if (len < 0) {
    handle_error("snprintf");
  }

  write(STDOUT_FILENO, buf, len);
}

void *init_heap(void) {
  void *tracker = sbrk(256);

  if (tracker == (void *)-1) {
    perror("sbrk failed");
    return NULL;
  }

  return tracker;
}
int main() {

  // initialize heap
  void *begin_heap = init_heap();

  sbrk();
}
