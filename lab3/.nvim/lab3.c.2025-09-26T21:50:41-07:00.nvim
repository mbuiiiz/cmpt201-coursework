#define _POSIX_C_SOURCE 200809L
#include <sys/types.h>
#include <stdint.h>
#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#define HISTORY_LENGTH 5 // to store the last 5 lines
                         
void history_reader(){
  // My variables
  char *history[HISTORY_LENGTH] = {NULL};
  int index = 0; // current position
  int count = 0; // total number of input

  char *line = NULL;
  size_t len = 0;
  ssize_t read;

  while(1){
    printf("Enter input: ");
    
    read = getline(&line, &len, stdin);

    // Check if getline fails (EOF)
    if(read == -1){
      break;
    }

    /*// Removing the trailing newline when pressing enter*/
    /*if (line[read - 1] == '\n'){*/
    /*  line[read - 1] = '\0';*/
    /*}*/
    /**/
    if (history[index]){
      free(history[index]);
    }

    // Storing, free before saving it in the history
    if( history[index] != NULL){
      free(history[index]);
    }
    history[index] = strdup(line); // copy the input
    
    index = (index + 1) % HISTORY_LENGTH; // move the index up 

    if(count < HISTORY_LENGTH){
      count++;
    }

    // Check if the user typed in print
    if(strcmp(line, "print") == 0){
      for (int i = 0; i < count; i++){
        printf("%s", history[i]);
      }
    }

    // free memory on exit
    free(line);
    for(int i = 0; i < count; i++){
      free(history[i]);
    }
    }

}

int main(){
  history_reader();
}
    
    
